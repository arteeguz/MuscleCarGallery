import pandas as pd
import qrcode
import os

def generate_qr_files_for_publisher(excel_file_path, link_column_name):
    """
    Generate QR codes as separate image files for Publisher mail merge
    """
    
    try:
        print("🔍 Step 1: Reading Excel file...")
        df = pd.read_excel(excel_file_path)
        print(f"✅ Found {len(df)} rows of data")
        
        print("🔍 Step 2: Checking column name...")
        if link_column_name not in df.columns:
            print(f"❌ Error: Column '{link_column_name}' not found!")
            print(f"💡 Available columns: {list(df.columns)}")
            return False
        
        print("📁 Step 3: Creating QR codes folder...")
        # Create folder for QR code images
        qr_folder = os.path.splitext(excel_file_path)[0] + "_QR_Images"
        os.makedirs(qr_folder, exist_ok=True)
        print(f"✅ Folder created: {qr_folder}")
        
        print("⚡ Step 4: Generating QR code files...")
        qr_paths = []
        successful_qrs = 0
        
        # Process each row
        for index, row in df.iterrows():
            row_number = index + 1
            website_link = row[link_column_name]
            
            # Skip empty/invalid links
            if pd.isna(website_link) or str(website_link).strip() == '':
                qr_paths.append('')
                print(f"  ⏭️  Row {row_number}: Skipping (empty link)")
                continue
            
            try:
                website_link = str(website_link).strip()
                print(f"  🔄 Row {row_number}: Creating QR for {website_link[:50]}...")
                
                # Generate QR code
                qr = qrcode.QRCode(
                    version=1,
                    error_correction=qrcode.constants.ERROR_CORRECT_L,
                    box_size=10,
                    border=4,
                )
                qr.add_data(website_link)
                qr.make(fit=True)
                
                # Create QR code image
                qr_image = qr.make_image(fill_color="black", back_color="white")
                
                # Save as PNG file
                filename = f"QR_{row_number:03d}.png"
                file_path = os.path.join(qr_folder, filename)
                qr_image.save(file_path)
                
                # Store the relative file path (only filename)
                qr_paths.append(filename)
                successful_qrs += 1
                print(f"  ✅ Row {row_number}: Saved as {filename}")
                
            except Exception as e:
                qr_paths.append('')
                print(f"  ❌ Row {row_number}: Error - {str(e)}")
        
        print("📝 Step 5: Creating new Excel file with QR paths...")
        # Add QR code file paths to the dataframe
        df['QR_Code_Path'] = qr_paths
        
        # Save new Excel file
        output_file = excel_file_path.replace('.xlsx', '_for_Publisher.xlsx')
        df.to_excel(output_file, index=False)
        
        print(f"✅ SUCCESS!")
        print(f"📊 Summary: {successful_qrs} QR codes created")
        print(f"📁 QR images saved in: {qr_folder}")
        print(f"📄 New Excel file: {output_file}")
        print(f"\n🎯 For Publisher Mail Merge:")
        print(f"1. Use the file: {output_file}")
        print(f"2. The 'QR_Code_Path' column contains paths to QR images (relative paths).")
        print(f"3. In Publisher, insert Image from File and select the 'QR_Code_Path' field")
        print(f"4. Make sure the folder with QR images is in the same directory as the Excel file.")
        
        return True
        
    except Exception as e:
        print(f"❌ Error: {str(e)}")
        return False
