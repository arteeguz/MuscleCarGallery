# Development Environment Setup (Local + RBC DEV Database)

## Overview

This section covers how to set up development with two options:

1. **Local MongoDB** - For fast development without network dependencies
2. **RBC DEV MongoDB** - For testing with real data from your laptop

## Environment Files Setup

Create the following files in your `backend` directory:

### backend/.env.local

```bash
# Local MongoDB Environment
ENVIRONMENT_NAME=local
PORT=3000
NODE_ENV=development
MONGODB_URI=mongodb://localhost:27017/office_space_poc

# Empty for local
MONGODB_USERNAME=
MONGODB_PASSWORD=
MONGODB_HOST=
MONGODB_PORT=
MONGODB_NAME=
```

### backend/.env.dev

```bash
# RBC DEV Database Environment (from your laptop)
ENVIRONMENT_NAME=dev
PORT=3000
NODE_ENV=development
MONGODB_URI=

# Fill these with your vault credentials
MONGODB_USERNAME=CHANGE_ME
MONGODB_PASSWORD=CHANGE_ME
MONGODB_HOST=strdlvbugz0002.devfg.rbc.com
MONGODB_PORT=17127
MONGODB_NAME=CHANGE_ME

# RBC MongoDB Settings
MONGODB_AUTH_MECHANISM=PLAIN
MONGODB_AUTH_SOURCE=$external
MONGODB_TLS=true

# Replica set (if provided)
MONGODB_ADDITIONAL_HOST_1=
MONGODB_ADDITIONAL_HOST_2=
```

## Additional Scripts Required

### backend/scripts/switch-env.js

Create this file to switch between environments easily. [Full code provided in previous response]

### backend/setup-vault-credentials.js

Helper script to set up vault credentials. [Full code provided in previous response]

## Updated package.json Scripts

Add these to your existing `backend/package.json`:

```json
{
  "scripts": {
    "dev:local": "node scripts/switch-env.js local && nodemon server.js",
    "dev:dev": "node scripts/switch-env.js dev && nodemon server.js",
    "env:local": "node scripts/switch-env.js local",
    "env:dev": "node scripts/switch-env.js dev",
    "test:connection": "node test-connection.js"
  }
}
```

## Development Workflow with Two Environments

### Option 1: Local Development (Default)

```bash
# No setup needed - just run
npm run dev:local
```

### Option 2: RBC DEV Database Development

**First Time Setup:**

1. Get credentials from your vault
2. Run: `node setup-vault-credentials.js`
3. Enter your credentials when prompted

**Daily Use:**

```bash
# Connect to RBC DEV database
npm run dev:dev
```

## Testing Connections

```bash
# Test whichever environment is active
npm run test:connection
```

## Important Notes

* **Security**: Never commit `.env.dev` with real credentials
* **VPN**: You need to be on RBC network/VPN for DEV database access
* **Default to Local**: Use local MongoDB for most development, switch to DEV only when needed
* **OpenShift**: When you deploy to OpenShift later, credentials will be automatically injected

## Quick Reference Commands

```bash
npm run dev:local        # Local MongoDB (no credentials needed)
npm run dev:dev          # RBC DEV MongoDB (requires vault setup)
npm run env:local        # Switch to local without starting
npm run env:dev          # Switch to dev without starting
npm run test:connection  # Test current connection
```

This dual-environment setup allows you to develop efficiently locally while having the option to test with real RBC data when needed, all while waiting for OpenShift deployment to be configured.
